trigger: none

pool:
  vmImage: windows-latest

variables:
- name: 'NEXT_PUBLIC_BUILD_ID'
  value: '$(Build.SourceVersion)'
- name: 'DistDirectory'
  value: '$(System.DefaultWorkingDirectory)/dist'

- name: 'TargetEnv'
  value: 'preview'




stages:

- stage: 'Build'
  jobs:
  - job: 'Build'
    steps:
    

    - script: yarn --frozen-lockfile --network-timeout=100000
      displayName: 'yarn install'


    - script: yarn build
      displayName: 'yarn build'

    - task: CopyFiles@2
      displayName: 'Copy Next build to dist'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          .next/**
          public/**
          next.config.js
          package.json
          server.js
          yarn.lock
        TargetFolder: '$(DistDirectory)'

    - task: CopyFiles@2
      displayName: 'Copy Azure web app files to dist'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: .azure/web-app/**
        flattenFolders: true
        TargetFolder: '$(DistDirectory)'

    - task: ArchiveFiles@2
      displayName: 'Archive dist to build artifacts'
      inputs:
        rootFolderOrFile: '$(DistDirectory)'
        includeRootFolder: false
        archiveFile: '$(Build.ArtifactStagingDirectory)/dist.zip'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'

- stage: 'Deploy'
  jobs:
  - deployment: 'Deploy'
    environment: crdep
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ExtractFiles@1
            displayName: 'Extract dist files'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/**/*.zip'
              destinationFolder: '$(DistDirectory)'


          # - task: AzureWebApp@1
          #   displayName: 'Deploy dist to web app'
          #   inputs:
          #     azureSubscription: '$(AzureServiceConnection)'
          #     appName: '$(WebAppName)'
          #     appType: 'webApp'
          #     deployToSlotOrASE: true
          #     resourceGroupName: '$(AzureResourceGroup)'
          #     slotName: '$(WebAppSlot)'
          #     package: '$(DistDirectory)'
          #     deploymentMethod: 'zipDeploy'

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'MadyManualServiceConnection'
              appType: 'webApp'
              WebAppName: 'crnode'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/dist.zip'
              enableCustomDeployment: true
              DeploymentType: 'zipDeploy'
